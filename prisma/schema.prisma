generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int        @id @default(autoincrement())
  name       String
  email      String     @unique
  password   String?
  role       Role       @default(USER)
  phone      String?
  picture    String?
  status     UserStatus @default(ACTIVE)
  isVerified Boolean    @default(false)
  bio        String?
  title      String?    
  location   String?
  website    String?
  github     String?
  linkedin   String?
  twitter    String?
  skills     String[]
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  posts      Post[]
  projects   Project[]
}

model Post {
  id          Int          @id @default(autoincrement())
  title       String
  content     String
  excerpt     String?      // Short description for blog listings
  slug        String       @unique // SEO-friendly URL
  thumbnail   String?
  isFeatured  Boolean      @default(false)
  isPublished Boolean      @default(false) // Draft vs Published posts
  tags        String[]
  views       Int          @default(0)
  authorId    Int
  author      User         @relation(fields: [authorId], references: [id])
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  publishedAt DateTime?    // When the post was published

  @@index([slug])
  @@index([isPublished])
  @@index([createdAt])
}

model Project {
  id           Int        @id @default(autoincrement())
  title        String
  description  String
  content      String?    // Detailed project description
  thumbnail    String?
  images       String[]   // Multiple project images
  technologies String[]   // Tech stack used
  githubUrl    String?
  liveUrl      String?
  featured     Boolean    @default(false)
  status       ProjectStatus @default(COMPLETED)
  startDate    DateTime?
  endDate      DateTime?
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  authorId     Int
  author       User       @relation(fields: [authorId], references: [id])

  @@index([featured])
  @@index([status])
}

enum Role {
  SUPER_ADMIN
  ADMIN
  USER
}

enum UserStatus {
  ACTIVE
  INACTIVE
  BLOCK
}

enum ProjectStatus {
  ONGOING
  COMPLETED
  UPCOMING
}